ServerRoot "/usr/local/apache2"
Listen 80

# Essential modules only
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule headers_module modules/mod_headers.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule log_config_module modules/mod_log_config.so

# Proxy modules
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

# Basic configuration
ServerName localhost
ErrorLog /proc/self/fd/2
LogLevel warn
LogFormat "%h %l %u %t \"%r\" %>s %b" common
CustomLog /proc/self/fd/1 common

# Reverse proxy configuration
<VirtualHost *:80>
    ServerName localhost

    # Enable proxying
    ProxyPreserveHost On
    ProxyRequests Off

    # Authentication config (Basic Auth with htpasswd file)
    <Location "/">
        AuthType Basic
        AuthName "Restricted Area"
        AuthUserFile "/usr/local/apache2/conf/.htpasswd"
        Require valid-user
        
        # Pass authenticated username to downstream containers
        RequestHeader set X-Remote-User "expr=%{REMOTE_USER}"
        RequestHeader set X-Auth-Type "Basic"
    </Location>

    # Route /api/* to FastAPI
    ProxyPass /api/ http://fastapi-app:8000/
    ProxyPassReverse /api/ http://fastapi-app:8000/

    # Route /go/* to Golang
    ProxyPass /go/ http://golang-app:8080/
    ProxyPassReverse /go/ http://golang-app:8080/

    # Default route to FastAPI
    ProxyPass / http://fastapi-app:8000/
    ProxyPassReverse / http://fastapi-app:8000/
</VirtualHost>
